- hosts: servers
  become: yes
  collections:
    - community.docker

  vars:
    users:
      - username: shoeb
        password: "Shoeb@123"
        email: syedshoeb8380@gmail.com
      - username: abrar
        password: "Abrar@123"
        email: syedabrar7757@gmail.com
    notebook_dir: /opt/notebooks

  pre_tasks:
    - name: Ensure python3-pip is installed
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Ensure passlib is installed
      pip:
        name: passlib
        executable: pip3

  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create users with hashed passwords
      user:
        name: "{{ item.username }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: /bin/bash
        state: present
        create_home: yes
      loop: "{{ users }}"

    - name: Add users to docker group
      user:
        name: "{{ item.username }}"
        groups: docker
        append: yes
      loop: "{{ users }}"

    - name: Add users to Sudo group
      user:
        name: "{{ item.username }}"
        groups: sudo
        append: yes
      loop: "{{ users }}"

    # - name: Enable PasswordAuthentication in sshd_config
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     regexp: '^#?PasswordAuthentication'
    #     line: 'PasswordAuthentication yes'
    #     state: present
    #     backrefs: yes

    # - name: Enable KbdInteractiveAuthentication in sshd_config
    #   lineinfile:
    #     path: /etc/ssh/sshd_config
    #     regexp: '^#?KbdInteractiveAuthentication'
    #     line: 'KbdInteractiveAuthentication yes'
    #     state: present
    #     backrefs: yes

    # - name: Restart SSH service
    #   service:
    #     name: ssh
    #     state: restarted

    - name: Pull PySpark notebook Docker image
      docker_image:
        name: jupyter/pyspark-notebook:latest
        source: pull

    - name: Ensure notebook directory exists on host
      file:
        path: "{{ notebook_dir }}"
        state: directory
        mode: '0777'

    - name: Create a PySpark Sample Jupyter Notebook file
      copy:
        dest: "{{ notebook_dir }}/PySparkSample.ipynb"
        content: |
          <... your notebook content unchanged ...>

    - name: Run PySpark Jupyter notebook container
      docker_container:
        name: pyspark-notebook-container
        image: jupyter/pyspark-notebook:latest
        state: started
        restart_policy: always
        ports:
          - "9870:8888"
        volumes:
          - "{{ notebook_dir }}:/home/jovyan/work"
        command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
