- hosts: servers
  become: yes
  collections:
    - community.docker

  vars:
    users:
      - username: shoeb
        password: shoeb123
        email: syedshoeb8380@gmail.com
      - username: abrar
        password: abrar123
        email: syedabrar7757@gmail.com
    notebook_dir: /opt/notebooks

  tasks:

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create users with plain text passwords
      user:
        name: "{{ item.username }}"
        password: "{{ item.password | password_hash('sha512') }}" # Hashing password for security
        shell: /bin/bash
        state: present
        create_home: yes
      loop: "{{ users }}"

    - name: Add users to docker group
      user:
        name: "{{ item.username }}"
        groups: docker
        append: yes
      loop: "{{ users }}"

    - name: Send email with credentials
      mail:
        subject: "Your Account on {{ inventory_hostname }}"
        to: "{{ item.email }}"
        body: |
          Hello {{ item.username }},

          Your account has been created on {{ inventory_hostname }}.
          Username: {{ item.username }}
          Password: {{ item.password }}

          Thanks,
          Admin
        from: "shoeb.corporate@gmail.com"
        host: smtp.gmail.com
        port: 587
        username: "{{ lookup('env', 'SMTP_USER') }}"
        password: "{{ lookup('env', 'SMTP_PASS') }}"
        secure: starttls
      loop: "{{ users }}"

    # --- New Tasks Start Here ---

    - name: Pull PySpark notebook Docker image
      docker_image:
        name: jupyter/pyspark-notebook:latest
        source: pull
        
    - name: Ensure notebook directory exists on host
      file:
        path: "{{ notebook_dir }}"
        state: directory
        mode: '0777' # Set permissions to allow the container to write to the directory

    - name: Create a "Hello World" Jupyter Notebook file
      copy:
        dest: "{{ notebook_dir }}/HelloWorld.ipynb"
        content: |
          {
           "cells": [
            {
             "cell_type": "code",
             "execution_count": null,
             "metadata": {},
             "outputs": [],
             "source": [
              "import pyspark\n",
              "print('Hello World from PySpark!')"
             ]
            }
           ],
           "metadata": {
            "kernelspec": {
             "display_name": "Python 3",
             "language": "python",
             "name": "python3"
            },
            "language_info": {
             "codemirror_mode": {
              "name": "ipython",
              "version": 3
             },
             "file_extension": ".py",
             "mimetype": "text/x-python",
             "name": "python",
             "nbconvert_exporter": "python",
             "pygments_lexer": "ipython3",
             "version": "3.9.12"
            }
           },
           "nbformat": 4,
           "nbformat_minor": 4
          }

    - name: Run PySpark Jupyter notebook container
      docker_container:
        name: pyspark-notebook-container
        image: jupyter/pyspark-notebook:latest
        state: started
        restart_policy: always
        ports:
          - "9870:8888"
        volumes:
          - "{{ notebook_dir }}:/home/jovyan/work"
        command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

